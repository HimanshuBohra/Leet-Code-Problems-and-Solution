Problem : Hard
There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5

Solution:

class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m=nums1.size();
        int n=nums2.size();
        double sum;
        cout<<m<<n;
        vector<float> nums3(m+n);
        merge(nums1.begin(), nums1.end(), nums2.begin(),  
                   nums2.end(), nums3.begin()); 
        int index=nums3.size()/2;
        cout<<nums3.size();
        if(nums3.size()%2==0){
            sum=(nums3[index]+nums3[index-1])/2;
            return sum;
        }
        else
        {
            return nums3[index];
        }
    }
};
